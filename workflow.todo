Checklist for making updates to dig web application:
 ☐ Avoid content and code duplication with good use of views, ui-router, angular, wiredep
 ☐ Create a new branch for every issue
 ☐ Before committing changes:
   ☐ Provide Jasmine unit tests for all angular controllers, services, filters, directives
     ☐ Create a spec file for each
     ☐ Ensure that karma.conf.js is up to date
   ☐ Provide mocha unit tests for server code
   ☐ Run: grunt test (runs client and server tests)
   ☐ Run: grunt test:e2e (runs protractor e2e tests)
   ☐ Ensure that all tests pass
   ☐ Ensure new/modified code is covered with good unit and e2e tests
   ☐ code should be reviewed with one other developer (pair programming counts as code reviewed)
 ☐ try to be as modular as possible.  Use many small controllers and small views instead of a few large ones.

General Guidelines:
 ☐ Use a layout view (index.html) with body content views and ui-router.
 ☐ Avoid static content
 ☐ When creating new views, add to e2e tests to test content sections
 ☐ e2e tests should reveal a broken system, e.g.:
   ☐ system no longer works with sample data set
   ☐ views do not contain necessary content
   ☐ dependencies are not present
   ☐ data schema changed
 ☐ e2e tests should check all content somewhere, at least once:
   ☐ navbar tests
   ☐ footer tests
 ☐ Modules:
   ☐ A module for each feature
   ☐ A module for each reusable component (especially directives and filters)
   ☐ And an application level module which depends on the above modules and contains any initialization code.
 ☐ Prototypes:
   ☐ use only CDNs or downloaded libraries (from client/prototypes) for static prototype content.
   ☐ IOW, don't use bower for prototypes

Project file description:
 ☐ karma.conf.js
 ☐ protractor.conf.js
 ☐ Gruntfile.js
 ☐ package.json
 ☐ bower.json

Code formatting:
 ☐ program source (like javascript) should use four-space indentation
 ☐ html and css should use two-space indentation

